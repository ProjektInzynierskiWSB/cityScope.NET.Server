// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using cityScope.NET.Server.Persistence;

#nullable disable

namespace cityScope.NET.Server.Persistence.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20231104075353_addImageUrlToAnnouncement")]
    partial class addImageUrlToAnnouncement
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("cityScope.NET.Server.Domain.Entities.Announcement", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<decimal>("Price")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UrlImage")
                        .HasColumnType("longtext");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Announcements");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 941, DateTimeKind.Local).AddTicks(7597),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 941, DateTimeKind.Local).AddTicks(7970),
                            Price = 4825.57m,
                            Title = "Practical Frozen Hat",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(18),
                            Description = "Andy shoes are designed to keeping in mind durability as well as trends, the most stylish range of shoes & sandals",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(106),
                            Price = 8593.95m,
                            Title = "Awesome Rubber Ball",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/tv.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(132),
                            Description = "The Nagasaki Lander is the trademarked name of several series of Nagasaki sport bikes, that started with the 1984 ABC800J",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(171),
                            Price = 9085.80m,
                            Title = "Incredible Plastic Shoes",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(186),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(225),
                            Price = 7555.36m,
                            Title = "Gorgeous Plastic Chips",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 5,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(239),
                            Description = "New range of formal shirts are designed keeping you in mind. With fits and styling that will make you stand apart",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(277),
                            Price = 107.41m,
                            Title = "Handmade Frozen Bike",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/table.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 6,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(291),
                            Description = "The slim & simple Maple Gaming Keyboard from Dev Byte comes with a sleek body and 7- Color RGB LED Back-lighting for smart functionality",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(333),
                            Price = 8336.14m,
                            Title = "Practical Granite Tuna",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/table.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 7,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(346),
                            Description = "The beautiful range of Apple Naturalé that has an exciting mix of natural ingredients. With the Goodness of 100% Natural Ingredients",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(383),
                            Price = 3314.69m,
                            Title = "Handcrafted Wooden Towels",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/tv.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 8,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(396),
                            Description = "Boston's most advanced compression wear technology increases muscle oxygenation, stabilizes active muscles",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(430),
                            Price = 1620.38m,
                            Title = "Handmade Rubber Towels",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 9,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(443),
                            Description = "New ABC 13 9370, 13.3, 5th Gen CoreA5-8250U, 8GB RAM, 256GB SSD, power UHD Graphics, OS 10 Home, OS Office A & J 2016",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(481),
                            Price = 375.91m,
                            Title = "Fantastic Wooden Mouse",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        },
                        new
                        {
                            Id = 10,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(494),
                            Description = "Carbonite web goalkeeper gloves are ergonomically designed to give easy fit",
                            LastModifiedDate = new DateTime(2023, 11, 4, 8, 53, 52, 942, DateTimeKind.Local).AddTicks(566),
                            Price = 1911.07m,
                            Title = "Awesome Soft Shirt",
                            UrlImage = "https://blobinz.blob.core.windows.net/images/ksiazka.jpg",
                            UserId = 1
                        });
                });

            modelBuilder.Entity("cityScope.NET.Server.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasAnnotation("Uniqueness", "Email");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("LastTimeLogin")
                        .HasColumnType("datetime(6)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<bool>("isBlocked")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2023, 11, 4, 8, 53, 52, 939, DateTimeKind.Local).AddTicks(2312),
                            Email = "example@example.com",
                            LastModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            LastTimeLogin = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PasswordHash = new byte[] { 92, 185, 58, 174, 119, 219, 211, 1, 16, 169, 45, 153, 235, 94, 154, 131, 60, 146, 197, 47, 45, 88, 138, 111, 200, 238, 77, 182, 54, 105, 18, 117, 26, 165, 37, 80, 237, 245, 191, 159, 61, 51, 63, 36, 207, 243, 140, 72, 85, 83, 103, 213, 154, 219, 161, 4, 130, 38, 233, 10, 219, 227, 27, 149 },
                            PasswordSalt = new byte[] { 228, 74, 146, 19, 24, 116, 201, 22, 232, 191, 20, 96, 242, 99, 179, 106, 64, 128, 168, 59, 61, 128, 160, 195, 187, 155, 30, 173, 153, 106, 118, 13, 227, 72, 11, 190, 0, 187, 0, 221, 164, 156, 18, 146, 46, 154, 12, 166, 193, 134, 208, 20, 240, 154, 114, 11, 248, 7, 9, 67, 131, 126, 15, 152, 230, 235, 73, 57, 42, 0, 2, 87, 185, 189, 63, 88, 114, 194, 196, 87, 62, 176, 103, 186, 33, 144, 23, 109, 159, 183, 244, 9, 220, 1, 205, 32, 205, 214, 253, 2, 13, 235, 237, 239, 225, 84, 152, 84, 25, 74, 6, 127, 31, 101, 221, 6, 155, 106, 128, 41, 100, 222, 152, 122, 51, 89, 159, 252 },
                            isBlocked = false
                        });
                });

            modelBuilder.Entity("cityScope.NET.Server.Domain.Entities.Announcement", b =>
                {
                    b.HasOne("cityScope.NET.Server.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
